// sample picoMIPS program 2 
// n = 8 bits, Isize = 16+n = 24 bits
// format: 6b opcode, 5b %d, 5b %s, 8b immediate or address
// 
// HEX /////////// BINARY  //////////////////// ASSEMBLER /////////
000000    // 24'b0000_0000_0000_0000_0000_0000   NOP
282003    // 24'b001010/00001/00000/00000011   ADDI %1, %0, 3; load x1=3
284005    // 24'b001010/00010/00000/00000101   ADDI %2, %0, 5; load x2=5
286060    // 24'b001010/00011/00000/01100000   ADDI %3, %0, 0.75; load A11
288040    // 24'b001010/00100/00000/01000000   ADDI %4, %0, 0.5; load A12
28A0C0    // 24'b001010/00101/00000/11000000   ADDI %5, %0, -0.5; load A21
28C060    // 24'b001010/00110/00000/01100000   ADDI %6, %0, 0.75; load A22
28E014    // 24'b001010/00111/00000/00010100   ADDI %7, %0, 20; load B11
2900EC    // 24'b001010/01000/00000/11101100   ADDI %8, %0, -20; load B21
106100    // 24'b000100/00011/00001/00000000   MULL_FLT %3, %1; multiply %3&%1 (0.75x3=2.25)  
108200    // 24'b000100/00100/00010/00000000   MULL_FLT %4, %2; multiply %4&%2 (0.5x5=2.5)
10A100    // 24'b000100/00101/00001/00000000   MULL_FLT %5, %1; multiply %5&%1 (-0.5x3=-1.5)
10C200    // 24'b000100/00110/00010/00000000   MULL_FLT %6, %2; multiply %6&%2 (0.75x5=3.75)
088300    // 24'b000010/00100/00011/00000000   ADD %4, %3; add %4&%3 (=4/'0100)
08C500    // 24'b000010/00110/00101/00000000   ADD %6, %5; add %6&%5 (=2/'b0010)
08E400    // 24'b000010/00111/00100/00000000   ADD %7, %4; add %7&%4 (20+4=24/'11000)
090600    // 24'b000010/01000/00110/00000000   ADD %8, %6; add %8&%6 (-20+2=-18/'1110_1110)
//200002    // 24'b001000/00000/00000/00000010



