// sample picoMIPS program 2 
// n = 8 bits, Isize = 16+n = 24 bits
// format: 6b opcode, 5b %d, 5b %s, 8b immediate or address
// 
// HEX /////////// BINARY  //////////////////// ASSEMBLER /////////
000000    // 24'b0000_0000_0000_0000_0000_0000   NOP
// 24'b010010/00001/00000/0000_0000
//282004    // 24'b011010/00001/00000/0000_0100   LDI %1, %0, 4;  load 3 in register 1 (loop count) //100
//284001    // 24'b0010_1000_0100_0000_0000_0001   ADDI %2, %0, 1;  clear reg 2
//284201    // 24'b0010_1000_0100_0010_0000_0001   ADDI %2, %2, 1;  increment  reg 2
//2C2002    // 24'b0010_1100_0010_0000_0000_0010   SUBI %1, %0, 2;  decrement  reg 1
//542206    // 24'b0101_0100_0010_0010_0000_0110   BEQ  %1, %2, +6;  branch if %1==2
//082100    // 24'b0000_1000_0100_0010_0000_0000   ADD  %1, %1, %0;  %2 = %2, display reg 2 //1000 -> 1100
//1C2200    // 24'b0001_1100_0010_0010_0000_0000   MULL %1, %2, %0;
//000000    // 24'b0000_0000_0000_0000_0000_0000   NOP
//200002    // 24'b0010_0000_0000_0000_0000_0010   JUMP %2; jump to reg 2
//406200    // 24'b0100_0000_0110_0010_0000_0000   STR  %3, %2; store from reg 2 to reg 3
